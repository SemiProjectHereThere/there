/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2016-09-13 04:26:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import java.sql.Date;

public final class memberUpdateView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	Member member = (Member)request.getAttribute("member");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>memberUpdateView</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
      out.write("\t<form action=\"mupdate\" method=\"post\">\r\n");
      out.write("\t\t<table width=\"700\">\r\n");
      out.write("\t\t<tr bgcolor=\"yellow\">\r\n");
      out.write("\t\t<th width=\"150\">항 목</th><th width=\"550\">내 용</th></tr>\r\n");
      out.write("\t\t<tr><td bgcolor=\"#66ccff\" align=\"center\">아 이 디</td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" id=\"mbid\" name=\"mbid\" readonly value=\"");
      out.print( member.getMemberId());
      out.write("\"></td></tr>\r\n");
      out.write("\t\t<tr><td align=\"center\">이 &nbsp; 름</td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" id=\"mbname\" name=\"mbname\" required value=\"");
      out.print( member.getMemberName());
      out.write("\"></td></tr>\r\n");
      out.write("\t\t<tr><td bgcolor=\"#66ccff\" align=\"center\">암 &nbsp; 호</td>\r\n");
      out.write("\t\t\t<td><input type=\"password\" id=\"mbpwd1\" name=\"mbpwd\" required value=\"");
      out.print( member.getMemberPwd());
      out.write("\"></td></tr>\r\n");
      out.write("\t\t<tr><td align=\"center\">암호확인</td>\r\n");
      out.write("\t\t\t<td><input type=\"password\" id=\"userpwd2\" required></td></tr>\r\n");
      out.write("\t\t<tr><td align=\"center\">이 메 일</td>\r\n");
      out.write("\t\t\t<td><input type=\"email\" name=\"email\" id=\"email\" value=\"");
      out.print( member.getEmail() );
      out.write("\"></td></tr>\r\n");
      out.write("\t\t<tr><td bgcolor=\"#66ccff\" align=\"center\">성 &nbsp; 별</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t");

				if(member.getGender() == 'M'){
			
      out.write("\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"gender\" value=\"M\" checked> 남  &nbsp;\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"gender\" value=\"F\"> 여  \r\n");
      out.write("\t\t\t");
 }else if(member.getGender() == 'F'){ 
      out.write("\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"gender\" value=\"M\" > 남  &nbsp;\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"gender\" value=\"F\" checked> 여 \r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</td></tr>\r\n");
      out.write("\t\t<tr><td bgcolor=\"#66ccff\" align=\"center\">생 &nbsp; 일</td>\r\n");
      out.write("\t\t\t<td><input type=\"date\" name=\"birthdate\" value=\"");
      out.print( member.getBirthday());
      out.write("\"></td></tr>\r\n");
      out.write("\t\t<tr><td align=\"center\">전화번호</td>\r\n");
      out.write("\t\t\t<td><input type=\"tel\" name=\"phone\" placeholder=\"- 포함 입력\" value=\"");
      out.print( member.getPhone());
      out.write("\"></td></tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr><td bgcolor=\"#66ccff\" colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"수정하기\"> &nbsp;\r\n");
      out.write("\t\t\t<a href=\"mdel?mbid=");
      out.print( member.getMemberId() );
      out.write("\">탈퇴하기</a> &nbsp;\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"취소\" onclick=\"javascript:history.go(-1);\">\r\n");
      out.write("\t\t</td></tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
